
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Layout/_AdminLayout.cshtml";
}
<style>
    .table-dark, .table-dark > td, .table-dark > th {
        background-color:#000;
        color:#fff;
    }
    .table-hover .table-dark:hover {
        background-color: #000;
    }
</style>
<div class="page-content fade-in-up">
    <div class="row">
        <div class="col-lg-6">
            <div class="ibox">
                <div class="ibox-body">
                    <div class="flexbox mb-4">
                        <div>
                            <h5 class="mb-0">Thống kê doanh thu</h5>
                        </div>
                        <div>
                            <div class="input-group date">
                                <span class="input-group-addon bg-white"><i class="fa fa-calendar"></i></span>
                                <input class="form-control" id="yearRevenue">
                            </div>
                        </div>
                    </div>
                    <div id="bar-chart"></div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="ibox">
                <div class="ibox-body">
                    <div class="flexbox mb-4">
                        <div>
                            <h5 class="mb-0">Thống kê lượng đơn hàng</h5>
                        </div>
                        <div>
                            <div class="input-group date">
                                <span class="input-group-addon bg-white"><i class="fa fa-calendar"></i></span>
                                <input class="form-control" id="yearTotalOrder">
                            </div>
                        </div>
                    </div>
                    <div id="line-chart"></div>
                </div>
            </div>
        </div>
    </div>
    <div id="statistic-detail">
        <div class="ibox">
            <div class="ibox-body">
                <div class="flexbox mb-4">
                    <div>
                        <h5 class="mb-0">Chi tiết</h5>
                    </div>
                    <div>
                        <div class="input-group date">
                            <span class="input-group-addon bg-white"><i class="fa fa-calendar"></i></span>
                            <input class="form-control" id="yearStatistic">
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-bordered">
                        <thead class="table-dark">
                            <tr>
                                <th>Tháng</th>
                                @for (var i = 1; i <= 12; i++)
                                {
                                    <th>@i</th>
                                }
                            </tr>
                        </thead>
                        <tbody id="tbl-tbody-statistic-detail"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section jsFooter{
    <script src="~/Content/AdminLayout/assets/vendors/Highcharts.js/highcharts.js"></script>
    <script src="~/Content/AdminLayout/assets/vendors/Highcharts.js/series-label.js"></script>
    <script src="~/Content/AdminLayout/assets/vendors/Highcharts.js/exporting.js"></script>
    <script src="~/Content/AdminLayout/assets/vendors/Highcharts.js/export-data.js"></script>
    <script src="~/Content/AdminLayout/assets/vendors/Highcharts.js/accessibility.js"></script>
    <script>
        $(document).ready(function () {
            var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            Highcharts.setOptions({
                colors: ['#058DC7', '#50B432', '#ff3838', '#fff200', '#24CBE5', '#64E572', '#FF9655', '#FFF263', '#6AF9C4']
            });
            var toDay = new Date();

            const tblBody = $("#tbl-tbody-statistic-detail");
           
            var arrRevenue = @Html.Raw(ViewBag.RevenueStatistic);
            var arrTotalOrder = @Html.Raw(ViewBag.TotalOrderStatistic);

            function GetRevenue(res, year) {
                var arrYAsis = JSON.parse(res.yAsis);
                var arrRevenue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                for (var i = 0; i < arrYAsis.length; i++) {
                    arrRevenue[arrYAsis[i].Month - 1] = arrYAsis[i].Money;
                }
                Highcharts.chart('bar-chart', {
                    chart: {
                        type: 'column'
                    },
                    title: {
                        text: 'Thống kê doanh thu'
                    },
                    subtitle: {
                        text: 'Tổng doanh thu theo từng tháng trong năm ' + year
                    },
                    xAxis: {
                        categories: monthNames,
                        crosshair: true
                    },
                    yAxis: {
                        min: 0,
                        title: {
                            text: 'Tổng doanh thu (VNĐ)'
                        },
                        labels: {
                            formatter: function () {
                                return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(this.value);
                            }
                        }
                    },
                    tooltip: {
                        borderWidth: 1,
                        shadow: true,
                        useHTML: true,
                        shared: true
                        //formatter: function () {
                        //    return '<span style="font-size:10px">' + this.x + '</span><table>' + '<tr><td style="color:' + this.series.color + ';padding:0">' + this.series.name +': </td>' +
                        //        '<td style="padding:0"><b>' + Highcharts.numberFormat(this.y, 0, ',') +' VNĐ</b></td></tr></table>';
                        //},
                    },
                    plotOptions: {
                        column: {
                            pointPadding: 0.2,
                            borderWidth: 0
                        }
                    },
                    series: [{
                        name: 'Tổng doanh thu',
                        data: arrRevenue
                    }]
                });
            }

            function GetTotalOrder(res, year) {
                var arrYAsis = JSON.parse(res.yAsis);
                var arrValueTotalOrder = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                for (var i = 0; i < arrYAsis.length; i++) {
                    arrValueTotalOrder[arrYAsis[i].Month - 1] = arrYAsis[i].Value;
                }

                Highcharts.chart('line-chart', {
                    chart: {
                        type: 'spline'
                    },
                    title: {
                        text: 'Thống kê lượng đơn hàng năm ' + year,
                    },
                    xAxis: {
                        categories: monthNames,
                    },
                    yAxis: {
                        title: {
                            text: 'Số lượng'
                        },
                        labels: {
                            formatter: function () {
                                return this.value;
                            }
                        }
                    },
                    tooltip: {
                        crosshairs: true,
                        shared: true,
                    },
                    plotOptions: {
                        spline: {
                            marker: {
                                radius: 4,
                                lineColor: '#666666',
                                lineWidth: 1
                            }
                        }
                    },
                    series: [{
                        name: 'Tổng đơn hàng',
                        marker: {
                            symbol: 'circle'
                        },
                        data: arrValueTotalOrder
                    }]
                });
            }

            $('#yearRevenue').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: "yyyy",
                startView: "years",
                minViewMode: "years"
            }).on('changeYear', function (e) {
                var pickedYear = new Date(e.date).getFullYear();
                $.ajax({
                    type: 'POST',
                    url: '/Highchart/PostDataGetRevenue',
                    data: { year: parseInt(pickedYear) },
                    success: function (response) {
                        GetRevenue(response, pickedYear);
                    }
                });
            });
            $('#yearRevenue').datepicker("setDate", new Date());

            $('#yearStatistic').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: "yyyy",
                startView: "years",
                minViewMode: "years"
            }).on('changeYear', function (e) {
                var pickedYear = new Date(e.date).getFullYear();
                $.ajax({
                    type: 'POST',
                    url: '/Highchart/PostDataStatisticDetail',
                    data: { year: parseInt(pickedYear) },
                    success: function (response) {
                        generateTbl(JSON.parse(response.arrTotalOrder), JSON.parse(response.arrRevenue));
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(jqXHR.statusText);
                        console.log(errorThrown);
                    }
                });
            });
            $('#yearStatistic').datepicker("setDate", new Date());

            $('#yearTotalOrder').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: "yyyy",
                startView: "years",
                minViewMode: "years"
            }).on('changeYear', function (e) {
                var pickedYear = new Date(e.date).getFullYear();
                $.ajax({
                    type: 'POST',
                    url: '/Highchart/PostDataGetTotalOrder',
                    data: { year: parseInt(pickedYear) },
                    success: function (response) {
                        GetTotalOrder(response, pickedYear)
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(jqXHR.status);
                        console.log(errorThrown);
                    }
                })
            })
            $('#yearTotalOrder').datepicker("setDate", new Date());

            $.getJSON("/Highchart/GetRevenue", function (response) {
                GetRevenue(response, toDay.getFullYear());
            })

            $.getJSON("/Highchart/GetTotalOrder", function (response) {
                GetTotalOrder(response, toDay.getFullYear())
            })

            function generateTbl($arr_totalOrder, $arr_revenue) {
                tblBody.empty();
                var initArrValueTotalOrder = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                var initArrValueRevenue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                var $trEle_1 = document.createElement("tr");
                var $trEle_2 = document.createElement("tr");
                var $td_1 = document.createElement("td");
                var $td_2 = document.createElement("td");
                $td_1.innerHTML = "Số lượng đơn hàng";
                $td_2.innerHTML = "Doanh thu";
                $trEle_1.appendChild($td_1);
                $trEle_2.appendChild($td_2);
                for (var i = 0; i < $arr_totalOrder.length; i++) {
                    initArrValueTotalOrder[$arr_totalOrder[i].Month - 1] = $arr_totalOrder[i].Value;
                }

                for (var i = 0; i < initArrValueTotalOrder.length; i++) {
                    var tdEle = document.createElement("td");
                    tdEle.innerHTML = initArrValueTotalOrder[i];
                    $trEle_1.appendChild(tdEle);
                }

                tblBody.append($trEle_1);

                for (var i = 0; i < $arr_revenue.length; i++) {
                    initArrValueRevenue[$arr_revenue[i].Month - 1] = $arr_revenue[i].Money;
                }

                for (var i = 0; i < initArrValueRevenue.length; i++) {
                    var tdEle = document.createElement("td");
                    tdEle.innerHTML = initArrValueRevenue[i].toLocaleString();
                    $trEle_2.appendChild(tdEle);
                }

                tblBody.append($trEle_2);
            }
            generateTbl(arrTotalOrder, arrRevenue);
        })
    </script>
}

