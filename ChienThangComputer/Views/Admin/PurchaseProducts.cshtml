
@{
    ViewBag.Title = "PurchaseProducts";
    Layout = "~/Views/Layout/_AdminLayout.cshtml";
}

@section cssPlugin{
    <link href="~/Content/AdminLayout/assets/vendors/chosen_v1.8.7/chosen.min.css" rel="stylesheet" />
}

<div class="ibox">
    <div class="ibox-head">
        <div class="ibox-title">Nhập hàng</div>
        <div class="ibox-tools">
            <a class="ibox-collapse"><i class="fa fa-minus"></i></a>
        </div>
    </div>
    @using (Html.BeginForm("PurchaseProducts", "Admin", FormMethod.Post, new { id = "formPurchaseProducts" }))
    {
        <div class="ibox-body" style="padding-left:0; padding-right:0;">
            <div class="mt-4 d-grid-action-wrap">
                <div class="inner-box__form">
                    <div class="title-box">
                        Chức năng
                    </div>
                    <button type="button" class="btn btn-outline-success btn-min-x btn-create-box">Tạo mới</button>
                    <button type="submit" class="btn btn-outline-primary ml-3 btn-min-x" id="js-btn-import">Nhập hàng</button>
                </div>
                <div class="inner-box__form inner-box__form--payment">
                    <div class="payment-heading">
                        <div class="title-box">
                            Thanh toán
                        </div>
                        
                    </div>
                    <div class="d-flex justify-content-between">
                        <div>
                            <div class="mb-3">
                                <input type="radio" value="opt_1" class="radioPayment" id="payLitleRadio" name="payment" />
                                <div class="virtual-radio"></div>
                                <label for="payLitleRadio" class="label-radio-payment">Trả góp</label>
                                <div class="payment-detail payment-detail-pay-litle">
                                    <input type="text" class="form-control" placeholder="Số tiền trả trước" autocomplete="off" name="SoTienDaTra" />
                                </div>
                            </div>
                            <div class="mb-3">
                                <input type="radio" value="opt_2" class="radioPayment" id="payAllRadio" name="payment" />
                                <div class="virtual-radio"></div>
                                <label for="payAllRadio" class="label-radio-payment">
                                    Thanh toán tất cả
                                </label>
                            </div>
                        </div>
                        <div>
                            <div class="total-payment">
                                <p class="font-weight-bold">Số tiền cần trả</p>
                                <p id="needToPay">0 VNĐ</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="inner-box__form">
                    <div class="title-box">
                        Nhà cung cấp
                    </div>
                    @Html.DropDownList("MaNCC", null, new { @class = "form-control" })
                </div>
            </div>
            <div class="box-form">
                <div class="box-wrap">
                    <div class="inner-box__form box-item" data-id="0">
                        <div class="close-btn-wrap">
                            <button type="button" class="btn btn-danger btn-close">X</button>
                        </div>
                        <div class="form-group row no-gutters-custom">
                            <label class="col-sm-3 col-form-label">Tên sản phẩm</label>
                            <div class="col-sm-9">
                                @{
                                    IEnumerable<SanPham> lstProduct = ViewBag.MaSP as IEnumerable<SanPham>;
                                }
                                <select class="ddlProduct" name="[0].MaSP">
                                    @foreach (var item in lstProduct)
                                    {
                                        <option value="@item.MaSP">
                                            @item.TenSP
                                        </option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group row no-gutters-custom">
                            <label class="col-sm-3 col-form-label">SL nhập</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control txtQuantity" name="[0].SoLuongNhap" />
                            </div>
                        </div>
                        <div class="form-group row no-gutters-custom">
                            <label class="col-sm-3 col-form-label">Đơn giá nhập</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control txtPrice" name="[0].DonGiaNhap" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

</div>
@section jsFooter{
    <script src="~/Content/AdminLayout/assets/vendors/chosen_v1.8.7/chosen.jquery.min.js"></script>

    <script>
        const radioList = $(".radioPayment");
        const paymentDetailPayAll = $(".payment-detail-pay-all");
        const paymentDetailPayLitle = $(".payment-detail-pay-litle");
        const paymentDetail = $(".payment-detail");
        const payLitleValue = $("input[name='SoTienDaTra']");
        const needToPay = $("#needToPay");
        paymentDetail.slideUp();

        $(".ddlProduct").chosen();
        $("#MaNCC").chosen();
        $(".btn-create-box").click(function () {
            var boxItem = $(".box-item").html();
            var getDataID = $(".box-wrap").find(".box-item:last-child").attr("data-id");
            i = parseInt(getDataID) + 1;
            var box = "<div class='inner-box__form box-item appended' data-id='" + i + "'>" + boxItem + "</div>";
            $(".box-wrap").append(box);
            $('.box-item:last select').chosen();
            $('.box-item:last select').next().next().remove();
            setNamePropListModel();
        })
        function setNamePropListModel() {
            $(".appended").each(function () {
                var id = $(this).attr("data-id");
                var nameDropProduct = "[" + id + "].MaSP";
                var nameTxtQuantity = "[" + id + "].SoLuongNhap";
                var nameTxtPrice = "[" + id + "].DonGiaNhap";
                $(this).find(".ddlProduct").prop("name", nameDropProduct);
                $(this).find(".txtQuantity").prop("name", nameTxtQuantity);
                $(this).find(".txtPrice").prop("name", nameTxtPrice);
            })
        }

        function updateIndexListModel() {
            var getDataID = $(".box-wrap").find(".box-item:first-child").attr("data-id");
            i = parseInt(getDataID) + 1;
            $(".appended").each(function () {
                var id = i;
                $(this).attr("data-id", id);
                var nameDropProduct = "[" + id + "].MaSP";
                var nameTxtQuantity = "[" + id + "].SoLuongNhap";
                var nameTxtPrice = "[" + id + "].DonGiaNhap";
                $(this).find(".ddlProduct").prop("name", nameDropProduct);
                $(this).find(".txtQuantity").prop("name", nameTxtQuantity);
                $(this).find(".txtPrice").prop("name", nameTxtPrice);
                i++;
            })
            Calculate();
        }

        $('body').delegate(".btn-close", "click", function (e) {
            var id = $(this).closest('.box-item').attr("data-id");
            if (id != 0) {
                $(this).closest('.box-item').remove();
                updateIndexListModel();
            }
        })

        $("#js-btn-import").click(function () {
            if (!validateFormImport() || !checkPayment()) {
                return false;
            }
        })

        
        function Calculate() {
            var money = 0;
            $(".txtPrice").each(function () {
                var valueInp = parseFloat($(this).val().trim());
                money += parseFloat(isNaN(valueInp) == true ? 0 : valueInp);
            })
            needToPay.text(money.toLocaleString() + " VNĐ");
        }

        function changeMoney() {
            $(".txtPrice").each(function () {
                $("body").delegate($(this), "input", function () {
                    Calculate();
                })
            })
        }


        function CalculateReturn() {
            var money = 0;
            $(".txtPrice").each(function () {
                var valueInp = parseFloat($(this).val().trim());
                money += parseFloat(isNaN(valueInp) == true ? 0 : valueInp);
            })
            return money;
        }


        let checkPayment = () => {
            let flag = true;
            if (!$("input[name='payment']:checked").val()) {
                Swal.fire({
                    text: 'Vui lòng chọn phương thức thanh toán!',
                    icon: 'error'
                })
                flag = false;
            }
            else {
                if ($("#payLitleRadio").is(':checked')) {
                    let valueCompare = CalculateReturn();
                    console.log(valueCompare);
                    if (payLitleValue.val().trim() === "") {
                        Swal.fire({
                            text: 'Vui lòng nhập giá tiền cần trả trước!',
                            icon: 'error'
                        })
                        flag = false;
                    } else if (isNaN(payLitleValue.val().trim())) {
                        Swal.fire({
                            text: 'Giá tiền trả trước không hợp lệ!',
                            icon: 'error'
                        })
                        flag = false;
                    }
                    else if (parseFloat(payLitleValue.val().trim()) > valueCompare) {
                        Swal.fire({
                            text: 'Giá tiền trả trước phải nhỏ hơn tiền cần thanh toán!',
                            icon: 'error'
                        })
                        flag = false;
                    } else {
                        flag = true;
                    }
                }
            }
            return flag;
        }


        let validateFormImport = () => {
            let arrElementInputQuantity = $(".txtQuantity");
            let arrElementInputPrice = $(".txtPrice");
            let flag = true;
            for (let i = 0; i < arrElementInputQuantity.length; i++) {
                var itemQuantity = arrElementInputQuantity[i];
                if (itemQuantity.value.trim() === "") {
                    Swal.fire({
                        text: 'Vui lòng nhập số lượng nhập cho sản phẩm thứ ' + parseInt(i + 1),
                        icon: 'error'
                    })
                    flag = false;
                }
                if (isNaN(itemQuantity.value.trim())) {
                    Swal.fire({
                        text: 'Thông tin số lượng nhập cho sản phẩm thứ ' + parseInt(i + 1) + " không hợp lệ",
                        icon: 'error'
                    })
                    flag = false;
                }
            }
            for (let j = 0; j < arrElementInputPrice.length; j++) {
                var itemPrice = arrElementInputPrice[j];
                if (itemPrice.value.trim() === "") {
                    Swal.fire({
                        text: 'Vui lòng nhập đơn giá nhập cho sản phẩm thứ ' + parseInt(j + 1),
                        icon: 'error'
                    })
                    flag = false;
                }
                if (isNaN(itemPrice.value.trim())) {
                    Swal.fire({
                        text: 'Thông tin đơn giá nhập cho sản phẩm thứ ' + parseInt(j + 1) + " không hợp lệ",
                        icon: 'error'
                    })
                    flag = false;
                }
            }
            return flag;
        }

        radioList.change(function () {
            Calculate();
            changeMoney();
            var inp_1 = document.getElementById("payLitleRadio");
            var inp_2 = document.getElementById("payAllRadio");
            if (inp_1.checked || inp_2.checked) {
                $(".total-payment").addClass("show");
            }
            if (this.value == "opt_1") {
                paymentDetailPayLitle.slideDown();
            } else {
                paymentDetailPayLitle.slideUp();
            }
        })
    </script>
}

